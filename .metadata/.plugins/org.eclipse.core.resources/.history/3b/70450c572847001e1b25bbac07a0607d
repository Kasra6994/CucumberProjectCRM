package steps;

import org.junit.Assert;
import org.openqa.selenium.support.PageFactory;

import io.cucumber.java.After;
import io.cucumber.java.Before;
import io.cucumber.java.en.Given;
import io.cucumber.java.en.Then;
import io.cucumber.java.en.When;
import pages.DataBasePage;
import pages.LoginPage;
import pages.TestBase;

public class LoginStepDefinition extends TestBase {
	
	
	LoginPage loginPage;
	DataBasePage databasePage;

	@Before
	public void setup() {

		init();
		loginPage = PageFactory.initElements(driver, LoginPage.class);
		databasePage = new DataBasePage();
	}

	@Given("User is on the Techfios login page")
	public void user_is_on_the_techfios_login_page() {

		driver.get("https://techfios.com/billing/?ng=admin/");
	}

	@When("User enters valid username as {string}")
	public void user_enters_valid_username_as(String username) {

		loginPage.enterUserName(username);
	}

	@When("User enters valid password as {string}")
	public void user_enters_valid_password_as(String password) {

		loginPage.enterPassword(password);
	}

	@When("User clicks on Sign in button")
	public void user_clicks_on_Sign_in_button() {

		loginPage.signIn();
	}

	@Then("User should succesfully login and land on the dashboard page")
	public void user_should_succesfully_login_and_land_on_the_dashboard_page() {

		String expectedTitle = "Dashboard- iBilling";
		String actualTitle = getTitle();
		Assert.assertEquals(expectedTitle, actualTitle);
		takeScreenshot(driver);
	}

	@When("User enters valid {string} from mysql database")
	public void user_enters_valid_from_mysql_database(String loginData) {
		if (loginData.equalsIgnoreCase("username")) {
			loginPage.enterUserName(databasePage.getDataFromDb("username"));
			System.out.println("username from DB: " + databasePage.getDataFromDb("username"));

		} else if (loginData.equalsIgnoreCase("password")) {
			loginPage.enterPassword(databasePage.getDataFromDb("password"));
			System.out.println("password from DB: " + databasePage.getDataFromDb("password"));
		} else {
			System.out.println("Unable to retrieve data");
		}

	}

	@When("User enters invalid username as {string}")
	public void user_enters_invalid_username_as(String username) {
		loginPage.enterUserName(username);
	}

	@When("User enters invalid password as {string}")
	public void user_enters_invalid_password_as(String password) {
		loginPage.enterPassword(password);
	}

	@Then("User should not be able to login")
	public void user_should_not_be_able_to_login() {
		loginPage.validateInvalidLogin();
	}

	@After
	public void tearDown() {
		try {
			Thread.sleep(2000);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		driver.close();
		driver.quit();
	}
}
